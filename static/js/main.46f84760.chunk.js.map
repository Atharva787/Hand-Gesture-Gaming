{"version":3,"sources":["stop.js","utilities.js","start.js","left.js","right.js","movedown.js","moveup.js","App.js","serviceWorker.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","i","x","y","arc","Math","PI","fillStyle","fill","Stop","GestureDescription","Finger","Index","Middle","Ring","Pinky","Thumb","addCurl","FingerCurl","NoCurl","addDirection","FingerDirection","VerticalUp","Start","HalfCurl","DiagonalUpLeft","FullCurl","HorizontalLeft","setWeight","Left","DiagonalUpRight","HorizontalRight","Right","Movedown","VerticalDown","DiagonalDownLeft","DiagonalDownRight","Moveup","App","webcamRef","useRef","canvasRef","runHandpose","a","handpose","net","console","log","setInterval","detect","current","video","readyState","videoWidth","videoHeight","width","height","estimateHands","hand","GE","fp","estimate","undefined","gesture","gestures","confidence","map","maxConfidence","indexOf","max","apply","name","v","document","getElementById","innerHTML","getContext","className","ref","position","bottom","right","textAlign","zindex","transform","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.46f84760.chunk.js","sourcesContent":["// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const Stop = new GestureDescription('Stop'); \r\n\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky,Finger.Thumb]) {\r\n    Stop.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n    Stop.addDirection(finger, FingerDirection.VerticalUp, 1);\r\n    Stop.addDirection(finger, FingerDirection.VerticalUp, 1);\r\n  }","// Points for fingers\r\nconst fingerJoints = {\r\n  thumb: [0, 1, 2, 3, 4],\r\n  indexFinger: [0, 5, 6, 7, 8],\r\n  middleFinger: [0, 9, 10, 11, 12],\r\n  ringFinger: [0, 13, 14, 15, 16],\r\n  pinky: [0, 17, 18, 19, 20],\r\n};\r\n\r\n// Infinity Gauntlet Style\r\nconst style = {\r\n  0: { color: \"yellow\", size: 15 },\r\n  1: { color: \"gold\", size: 6 },\r\n  2: { color: \"green\", size: 10 },\r\n  3: { color: \"gold\", size: 6 },\r\n  4: { color: \"gold\", size: 6 },\r\n  5: { color: \"purple\", size: 10 },\r\n  6: { color: \"gold\", size: 6 },\r\n  7: { color: \"gold\", size: 6 },\r\n  8: { color: \"gold\", size: 6 },\r\n  9: { color: \"blue\", size: 10 },\r\n  10: { color: \"gold\", size: 6 },\r\n  11: { color: \"gold\", size: 6 },\r\n  12: { color: \"gold\", size: 6 },\r\n  13: { color: \"red\", size: 10 },\r\n  14: { color: \"gold\", size: 6 },\r\n  15: { color: \"gold\", size: 6 },\r\n  16: { color: \"gold\", size: 6 },\r\n  17: { color: \"orange\", size: 10 },\r\n  18: { color: \"gold\", size: 6 },\r\n  19: { color: \"gold\", size: 6 },\r\n  20: { color: \"gold\", size: 6 },\r\n};\r\n\r\n// Drawing function\r\nexport const drawHand = (predictions, ctx) => {\r\n  // Check if we have predictions\r\n  if (predictions.length > 0) {\r\n    // Loop through each prediction\r\n    predictions.forEach((prediction) => {\r\n      // Grab landmarks\r\n      const landmarks = prediction.landmarks;\r\n\r\n      // Loop through fingers\r\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\r\n        let finger = Object.keys(fingerJoints)[j];\r\n        //  Loop through pairs of joints\r\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\r\n          // Get pairs of joints\r\n          const firstJointIndex = fingerJoints[finger][k];\r\n          const secondJointIndex = fingerJoints[finger][k + 1];\r\n\r\n          // Draw path\r\n          ctx.beginPath();\r\n          ctx.moveTo(\r\n            landmarks[firstJointIndex][0],\r\n            landmarks[firstJointIndex][1]\r\n          );\r\n          ctx.lineTo(\r\n            landmarks[secondJointIndex][0],\r\n            landmarks[secondJointIndex][1]\r\n          );\r\n          ctx.strokeStyle = \"plum\";\r\n          ctx.lineWidth = 4;\r\n          ctx.stroke();\r\n        }\r\n      }\r\n\r\n      // Loop through landmarks and draw em\r\n      for (let i = 0; i < landmarks.length; i++) {\r\n        // Get x point\r\n        const x = landmarks[i][0];\r\n        // Get y point\r\n        const y = landmarks[i][1];\r\n        // Start drawing\r\n        ctx.beginPath();\r\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\r\n\r\n        // Set line color\r\n        ctx.fillStyle = style[i][\"color\"];\r\n        ctx.fill();\r\n      }\r\n    });\r\n  }\r\n};\r\n","// // Import dependencies\r\n// import { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// // Define Gesture Description\r\n// export const Start = new GestureDescription('Start');\r\n\r\n// Start.addCurl(Finger.Thumb, FingerCurl.FullCurl, 1);\r\n// Start.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 1);\r\n// Start.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1);\r\n// Start.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.75);\r\n// Start.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.75);\r\n\r\n// for (let finger of[Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n\r\n//     Start.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n//     Start.addCurl(finger, FingerCurl.HalfCurl, 1.0);\r\n//     Start.addDirection(finger, FingerDirection.VerticalUp, 0.75);\r\n//     // Start.addDirection(finger, FingerDirection.DiagonalUpLeft, 1.0);\r\n//     // Start.addDirection(finger, FingerDirection.HorizontalLeft, 0.2);\r\n//     // Start.addDirection(finger, FingerDirection.DiagonalUpRight, 1.0);\r\n//     // Start.addDirection(finger, FingerDirection.HorizontalRight, 0.2);\r\n// }\r\n\r\n\r\n\r\n// Import dependencies\r\nimport { Finger, FingerCurl, FingerDirection, GestureDescription } from 'fingerpose';\r\n\r\n// describe victory gesture ✌️\r\nexport const Start = new GestureDescription('Start');\r\n\r\n\r\n// thumb:\r\nStart.addCurl(Finger.Thumb, FingerCurl.HalfCurl, 0.5);\r\nStart.addCurl(Finger.Thumb, FingerCurl.NoCurl, 0.5);\r\nStart.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\nStart.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// index:\r\nStart.addCurl(Finger.Index, FingerCurl.NoCurl, 1.0);\r\nStart.addDirection(Finger.Index, FingerDirection.VerticalUp, 0.75);\r\nStart.addDirection(Finger.Index, FingerDirection.DiagonalUpLeft, 1.0);\r\n\r\n// middle:\r\nStart.addCurl(Finger.Middle, FingerCurl.NoCurl, 1.0);\r\nStart.addDirection(Finger.Middle, FingerDirection.VerticalUp, 1.0);\r\nStart.addDirection(Finger.Middle, FingerDirection.DiagonalUpLeft, 0.75);\r\n\r\n// ring:\r\nStart.addCurl(Finger.Ring, FingerCurl.FullCurl, 1.0);\r\nStart.addDirection(Finger.Ring, FingerDirection.VerticalUp, 0.2);\r\nStart.addDirection(Finger.Ring, FingerDirection.DiagonalUpLeft, 1.0);\r\nStart.addDirection(Finger.Ring, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// pinky:\r\nStart.addCurl(Finger.Pinky, FingerCurl.FullCurl, 1.0);\r\nStart.addDirection(Finger.Pinky, FingerDirection.VerticalUp, 0.2);\r\nStart.addDirection(Finger.Pinky, FingerDirection.DiagonalUpLeft, 1.0);\r\nStart.addDirection(Finger.Pinky, FingerDirection.HorizontalLeft, 0.2);\r\n\r\n// give additional weight to index and ring fingers\r\nStart.setWeight(Finger.Index, 2);\r\nStart.setWeight(Finger.Middle, 2);\r\n\r\nexport default Start;","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const Left = new GestureDescription('Left'); \r\n\r\nLeft.addCurl(Finger.Thumb,FingerCurl.HalfCurl,1);\r\nLeft.addCurl(Finger.Thumb,FingerCurl.NoCurl,1);\r\nLeft.addDirection(Finger.Thumb,FingerDirection.VerticalUp,1);\r\nLeft.addDirection(Finger.Thumb,FingerDirection.DiagonalUpLeft,0.75);\r\nLeft.addDirection(Finger.Thumb,FingerDirection.DiagonalUpRight,0.75);\r\n\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n\r\n    Left.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n    Left.addDirection(finger, FingerDirection.HorizontalRight, 1);\r\n    //Left.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75);\r\n    //Left.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.50);\r\n  }","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const Right = new GestureDescription('Right'); \r\n\r\nRight.addCurl(Finger.Thumb,FingerCurl.HalfCurl,1);\r\nRight.addCurl(Finger.Thumb,FingerCurl.NoCurl,1);\r\nRight.addDirection(Finger.Thumb,FingerDirection.VerticalUp,1);\r\nRight.addDirection(Finger.Thumb,FingerDirection.DiagonalUpLeft,0.75);\r\nRight.addDirection(Finger.Thumb,FingerDirection.DiagonalUpRight,0.75);\r\n\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n\r\n    Right.addCurl(finger, FingerCurl.NoCurl, 1.0);\r\n    Right.addDirection(finger, FingerDirection.HorizontalLeft, 1);\r\n    //Left.addDirection(finger, FingerDirection.DiagonalUpRight, 0.75);\r\n    //Left.addDirection(finger, FingerDirection.DiagonalUpLeft, 0.50);\r\n  }","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const Movedown = new GestureDescription('Movedown'); \r\n\r\nMovedown.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nMovedown.addDirection(Finger.Thumb, FingerDirection.VerticalDown, 1.0);\r\nMovedown.addDirection(Finger.Thumb, FingerDirection.DiagonalDownLeft, 0.5);\r\nMovedown.addDirection(Finger.Thumb, FingerDirection.DiagonalDownRight, 0.5);\r\n\r\n// all other fingers:\r\n// - curled\r\n// - horizontal left or right\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n    Movedown.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n    Movedown.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\r\n    Movedown.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\r\n}","// Import dependencies\r\nimport {Finger, FingerCurl, FingerDirection, GestureDescription} from 'fingerpose'; \r\n\r\n// Define Gesture Description\r\nexport const Moveup = new GestureDescription('Moveup'); \r\n\r\nMoveup.addCurl(Finger.Thumb, FingerCurl.NoCurl, 1.0);\r\nMoveup.addDirection(Finger.Thumb, FingerDirection.VerticalUp, 1.0);\r\nMoveup.addDirection(Finger.Thumb, FingerDirection.DiagonalUpLeft, 0.25);\r\nMoveup.addDirection(Finger.Thumb, FingerDirection.DiagonalUpRight, 0.25);\r\n\r\n// all other fingers:\r\n// - curled\r\n// - horizontal left or right\r\nfor(let finger of [Finger.Index, Finger.Middle, Finger.Ring, Finger.Pinky]) {\r\n    Moveup.addCurl(finger, FingerCurl.FullCurl, 1.0);\r\n    Moveup.addDirection(finger, FingerDirection.HorizontalLeft, 1.0);\r\n    Moveup.addDirection(finger, FingerDirection.HorizontalRight, 1.0);\r\n}","///////// NEW STUFF ADDED USE STATE\r\nimport React, { useRef } from \"react\";\r\n///////// NEW STUFF ADDED USE STATE\r\n\r\n// import logo from './logo.svg';\r\nimport * as tf from \"@tensorflow/tfjs\";\r\nimport * as handpose from \"@tensorflow-models/handpose\";\r\nimport Webcam from \"react-webcam\";\r\nimport \"./App.css\";\r\nimport { drawHand } from \"./utilities\";\r\n\r\n///////// NEW STUFF IMPORTS\r\nimport * as fp from \"fingerpose\";\r\n// import victory from \"./victory.png\";\r\n// import thumbs_up from \"./thumbs_up.png\";\r\n\r\nimport { Stop } from \"./stop\";\r\nimport { Start } from \"./start\";\r\nimport { Left } from \"./left\";\r\nimport { Right } from \"./right\";\r\nimport { Movedown } from \"./movedown\";\r\nimport { Moveup } from \"./moveup\";\r\n\r\n///////// NEW STUFF IMPORTS\r\n\r\nfunction App() {\r\n    const webcamRef = useRef(null);\r\n    const canvasRef = useRef(null);\r\n\r\n    ///////// NEW STUFF ADDED STATE HOOK\r\n\r\n    // const [emoji, setEmoji] = useState(null);\r\n    // const images = { thumbs_up: thumbs_up, victory: victory };\r\n\r\n    ///////// NEW STUFF ADDED STATE HOOK\r\n\r\n    const runHandpose = async() => {\r\n        const net = await handpose.load();\r\n        console.log(\"Handpose model loaded.\");\r\n        //  Loop and detect hands\r\n        setInterval(() => {\r\n            detect(net);\r\n        }, 100);\r\n    };\r\n\r\n    const detect = async(net) => {\r\n        // Check data is available\r\n        if (\r\n            typeof webcamRef.current !== \"undefined\" &&\r\n            webcamRef.current !== null &&\r\n            webcamRef.current.video.readyState === 4\r\n        ) {\r\n            // Get Video Properties\r\n            const video = webcamRef.current.video;\r\n            const videoWidth = webcamRef.current.video.videoWidth;\r\n            const videoHeight = webcamRef.current.video.videoHeight;\r\n\r\n            // Set video width\r\n            webcamRef.current.video.width = videoWidth;\r\n            webcamRef.current.video.height = videoHeight;\r\n\r\n            // Set canvas height and width\r\n            canvasRef.current.width = videoWidth;\r\n            canvasRef.current.height = videoHeight;\r\n\r\n            // Make Detections\r\n            const hand = await net.estimateHands(video);\r\n            // console.log(hand);\r\n\r\n            ///////// NEW STUFF ADDED GESTURE HANDLING\r\n\r\n            if (hand.length > 0) {\r\n                const GE = new fp.GestureEstimator([\r\n                    Stop,\r\n                    Start,\r\n                    Left,\r\n                    Right,\r\n                    Moveup,\r\n                    Movedown,\r\n                ]);\r\n\r\n                const gesture = await GE.estimate(hand[0].landmarks, 7);\r\n\r\n                if (gesture.gestures !== undefined && gesture.gestures.length > 0) {\r\n                    // console.log(gesture.gestures);\r\n\r\n                    const confidence = gesture.gestures.map(\r\n                        (prediction) => prediction.confidence\r\n                    );\r\n                    const maxConfidence = confidence.indexOf(\r\n                        Math.max.apply(null, confidence)\r\n                    );\r\n                    console.log(gesture.gestures[maxConfidence].name);\r\n                    var v = gesture.gestures[maxConfidence].name\r\n\r\n                    document.getElementById(\"insert\").innerHTML = v;\r\n                    // document.getElementById(\"abc\").innerHTML = v;\r\n\r\n\r\n                    // return (v);\r\n                    // $.getScript(\"external.js\",function(){\r\n                    //   alert(mygi);\r\n                    // });\r\n\r\n                    // if (v == \"Right\") {\r\n                    //     console.log(mygi);\r\n                    //     mygi.SendMessage('Cylinder', 'MoveRight');\r\n                    //     document.getElementById(\"insert\").innerHTML = \"\"\r\n                    // }\r\n                    // if (v == \"Left\") {\r\n                    //     console.log(mygi);\r\n                    //     mygi.SendMessage('Cylinder', 'MoveLeft');\r\n                    //     document.getElementById(\"insert\").innerHTML = \"\"\r\n                    // }\r\n                    // if (v == \"MoveUp\") {\r\n                    //     console.log(mygi);\r\n                    //     console.log(\"In MoveForward\");\r\n                    //     mygi.SendMessage('Cylinder', 'MoveForward');\r\n                    //     document.getElementById(\"insert\").innerHTML = \"\"\r\n                    // }\r\n                    // if (v == \"MoveDown\") {\r\n                    //     console.log(mygi);\r\n                    //     mygi.SendMessage('Cylinder', 'MoveBackward');\r\n                    //     document.getElementById(\"insert\").innerHTML = \"\"\r\n                    // }\r\n                }\r\n            }\r\n\r\n            ///////// NEW STUFF ADDED GESTURE HANDLING\r\n\r\n            // Draw mesh\r\n            const ctx = canvasRef.current.getContext(\"2d\");\r\n            drawHand(hand, ctx);\r\n        }\r\n    };\r\n\r\n    runHandpose();\r\n\r\n    return ( <\r\n        div className = \"App\" >\r\n        <\r\n        header className = \"App-header\" >\r\n        <\r\n        Webcam ref = { webcamRef }\r\n        style = {\r\n            {\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                right: 0,\r\n                // marginLeft: \"auto\",\r\n                // marginRight: \"auto\",\r\n                // left: 0,\r\n                // right: 0,\r\n                textAlign: \"center\",\r\n                zindex: 9,\r\n                width: 250,\r\n                height: 188,\r\n                transform: 'scaleX(-1)',\r\n            }\r\n        }\r\n        />\r\n\r\n        <\r\n        canvas ref = { canvasRef }\r\n        style = {\r\n            {\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                right: 0,\r\n                // marginLeft: \"auto\",\r\n                // marginRight: \"auto\",\r\n                // left: 0,\r\n                // right: 0,\r\n                textAlign: \"center\",\r\n                zindex: 9,\r\n                width: 250,\r\n                height: 188,\r\n                transform: 'scaleX(-1)',\r\n            }\r\n        }\r\n        />\r\n\r\n        <\r\n        /header>  < /\r\n        div >\r\n    );\r\n}\r\n\r\n// function abc() {\r\n//     console.log(a);\r\n//     mygi.SendMessage('Cylinder', 'MoveForward');\r\n// }\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}